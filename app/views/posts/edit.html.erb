<h1>ToDo</h1>
<h3>編集</h3>
<%= form_for @post do |f| %>
  <div class="field">
    <%= f.label :title %><br>
    <%= f.text_field :title, :size => 50 %><br>
    <%= f.label :contents %>
    <%= f.text_field :contents, :size => 140 %>
  </div>
    <div class="field">
    <%= f.label :image %>
    <%= f.file_field :image %>
  </div>
  <div class="check_box">
    <span>タグ</span>
    <%= f.collection_select(:tag_ids, Tag.all, :id, :prefecture) do |tag| %>
     <div>
       <%= tag.label do %>
         <%= tag.select %>
         <%= tag.text %>
       <% end %>
     </div>
    <% end %>
  </div>
  <%#= 追加、addressカラムに保存するためのフォーム form_for ~ endの中で作成 %>
  <div class="field">
    <%= f.label :address %>
    <%= f.text_field :address, :size => 140 %>
  </div>
  <%#= 追加、addressカラムの情報を地図で表示させるためのボタン、クリックするとcodeAddress()が実行%>
  <div class="field">
    <input type="button" value="位置情報を登録" onclick="getAddress()">
    <input type="button" value="場所を地図で表示" onclick="codeAddress()">
  </div>
  <%= f.submit "更新する" %>
<% end %>

<%#= 追加、mapが表示される部分 %>
<div id="map"></div>

<%#= 追加、<div id="map"></div>の大きさを定義 400px×400px 〇〇.scssに書いても良い。 %>
<style>
    #map {
        height: 400px;
        width: 400px;
    }
</style>

<script>
let map

//mapの表示関数。center:{lat:〇〇,lng:〇〇},zoom: 〇,の〇は好きな値に変更可能。
function initMap(){

  geocoder = new google.maps.Geocoder();


　// 取得した位置情報を中心に表示
  map = new google.maps.Map(document.getElementById("map"), {
    center: {
      //@postにlatitude,longitudeの情報が入っている。@postは自分のコントローラーに合うように適宜変更すること。
      lat: <%= @post.latitude %> ,
      lng: <%= @post.longitude %>
    },
    zoom: 15,
  });
  
  (function () {
    var contentString = "住所：<%= @post.address %>";

    var marker = new google.maps.Marker({
      //@postにlatitude,longitudeの情報が入っている。@postは自分のコントローラーに合うように適宜変更すること。
      position: {
        lat: <%= @post.latitude %>,
        lng: <%= @post.longitude %>
      },
      map: map,
      title: contentString
    });

  })();
}


let geocoder
var markers = new Array();

function getAddress(){
    navigator.geolocation.getCurrentPosition(function (position) {
      LatLngInput = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
  
    geocoder.geocode(
      {
        latLng: LatLngInput
      },
      function(results) {
        
        var address = "";
        address = results[0].formatted_address;
        document.getElementById('post_address').value = address;
      });
      map.setCenter(LatLngInput);
      map.setZoom(15);
      if (markers.length > 0) {
        markers[0].setMap(null);
        markers.length = 0;
      }
      var marker = new google.maps.Marker({
              map : map,         
              position : LatLngInput
      });
      markers.push(marker)
    });
}

function codeAddress(){
  //右辺のtweet_addressの部分はaddressカラムの入力フォームの "id" を書く。今回はf.text_field :addressの部分
  //idの確認方法はgoogle chromeのデベロッパーツールでみる。
  let inputAddress = document.getElementById('post_address').value;

  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
      map.setCenter(results[0].geometry.location);
      map.setZoom(15);
      if (markers.length > 0) {
        markers[0].setMap(null);
        markers.length = 0;
      }
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
      markers.push(marker)
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });   
}

</script>
<%#= .envファイルに書かれているAPIキーを呼び出す部分。%>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_KEY']%>&callback=initMap" async defer></script>
